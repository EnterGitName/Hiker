{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"DT","rule":"const empty = \"hiker://empty\"\n\nif (typeof(拼接分类) != 'undefined' && 拼接分类 != '') {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} else {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getVar(MY_RULE.group, \"0\")\nconst cate_temp_json = getVar(MY_RULE.title, JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b>' + '∨'.fontcolor(\"#FF0000\") + '</b>' : '““””<b>' + '∧'.fontcolor(\"#1aad19\") + '</b>',\n        url: $().lazyRule((fold) => {\n            putVar(MY_RULE.group, fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                if (typeof(排除) != 'undefined' && 排除 != '') {\n                    title = title.replace(new RegExp(排除, \"g\"), \"\")\n                }\n                d.push({\n                    title: key.toString() === cate_temp[index] ? \"““””\" + title.fontcolor(分类颜色) : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putVar(MY_RULE.title, JSON.stringify(new_cate))\n                        putVar(MY_RULE.url, input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                if (typeof(排除) != 'undefined' && 排除 != '') {\n                    title = title.replace(new RegExp(排除, \"g\"), \"\")\n                }\n                d.push({\n                    title: key.toString() === cate_temp[index] ? \"““””\" + title.fontcolor(分类颜色) : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putVar(MY_RULE.title, JSON.stringify(params.cate_temp))\n                        putVar(MY_RULE.url, input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"}],"title":"lysx.m","author":"梦之尘","version":1,"type":"video","url":"hiker://empty##https://www.lysx4.buzz/vodtype/25-fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\n\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = 'body&&.nav-inline'\n\nconst 拼接分类 = 'body&&.bg-yellow'\nconst 小类定位 = 'body&&.nav-inline&&a:not(:matches(首|专题))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nMY_URL = MY_URL.replace('hiker://empty##', '')\n\nlet true_url = getVar(MY_RULE.url, MY_URL)\nlog(true_url)\nconst page = MY_PAGE\n\n//https://lysx.buzz/index.php/vod/type/id/25/page/2.html\n//true_url=true_url.replace(/(\\d+)?---(\\d+)?\\.html/, page + '---$2' + '.html');\n\nif (true_url.includes('vod')) {\n    true_url = true_url.replace(/vodtype(\\/\\d+).*/, 'vodtype/$1-' + page + '.html');\n\n} else {\n    true_url = true_url.replace(\"vod\", \"art\").replace(/vodtype(\\/\\d+).*/, 'vodtype/$1-' + page + '.html');\n}\nlog(true_url)\n\n\n\n     \n\nvar html = request(true_url)\nrequire('hiker://page/DT')\nvar list = parseDomForArray(html, 'body&&.item');\r\nfor (var j in list) {\r\n  d.push({\r\n       title: parseDomForHtml(list[j], '.thumb&&a&&title'),\r\n       desc: parseDomForHtml(list[j], '.extra&&a&&Text'),\r\n       img: parseDom(list[j], '.thumb&&img&&data-original')+'@Referer=',\n       \n     url: 'video://'+parseDom(list[j], '.title&&a&&href').replace(/detail/gi,'play').replace(/\\.html/gi,'-1-1.html')\n\n/*+ '@' + $.toString(() => {\n    var urls = _getUrls();\n    for (var i in urls) {\n        if (urls[i].match(/\\.mp4|\\.m3u8/)) {\n            fy_bridge_app.log(urls[i]);\n            return urls[i].replace(/http.*url=/,'').replace(/https.*url=/,'')\n        }\n    }\n})*/\n\n})\n}\n//log(url)\r\nsetResult(d);\n","searchFind":"js:\n//以下是 列表解析规则（JS）\nvar d = [];\n\nvar list = parseDomForArray(getResCode(), 'body&&.thumb');//【列表】\nfor (var j in list) {\n  d.push({\n       title: parseDomForHtml(list[j], 'a&&title'),//【标题】\n       desc: parseDomForHtml(list[j], 'a&&title'),//【描述】\n       content: parseDomForHtml(list[j], 'a&&title'),//【详情】\n       pic_url: parseDom(list[j], 'img&&data-original'),//【图片】\n     url: 'video://'+parseDom(list[j], 'a&&href').replace(/detail/gi,'play').replace(/\\.html/gi,'-1-1.html')\n})\n}\n//log(url)\r\nsetResult(d);","search_url":"https://www.lysx4.buzz/vodsearch/**----------fypage---.html","group":"#1视频","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"//https://www.luoyusx.top/","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"DT\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\nif (typeof(拼接分类) != 'undefined' && 拼接分类 != '') {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} else {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getVar(MY_RULE.group, \\\"0\\\")\\nconst cate_temp_json = getVar(MY_RULE.title, JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b>' + '∨'.fontcolor(\\\"#FF0000\\\") + '</b>' : '““””<b>' + '∧'.fontcolor(\\\"#1aad19\\\") + '</b>',\\n        url: $().lazyRule((fold) => {\\n            putVar(MY_RULE.group, fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                if (typeof(排除) != 'undefined' && 排除 != '') {\\n                    title = title.replace(new RegExp(排除, \\\"g\\\"), \\\"\\\")\\n                }\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? \\\"““””\\\" + title.fontcolor(分类颜色) : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putVar(MY_RULE.title, JSON.stringify(new_cate))\\n                        putVar(MY_RULE.url, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                if (typeof(排除) != 'undefined' && 排除 != '') {\\n                    title = title.replace(new RegExp(排除, \\\"g\\\"), \\\"\\\")\\n                }\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? \\\"““””\\\" + title.fontcolor(分类颜色) : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putVar(MY_RULE.title, JSON.stringify(params.cate_temp))\\n                        putVar(MY_RULE.url, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"}]","proxy":"","icon":""}